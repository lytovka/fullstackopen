{"version":3,"sources":["services/persons.js","components/Filter.js","components/Input.js","components/Button.js","components/PersonsForm.js","components/Person.js","components/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["baseURL","services_persons","axios","get","then","response","data","newObj","post","id","obj","put","concat","delete","Filter","_ref","value","handler","react_default","a","createElement","Fragment","onChange","Input","Button","text","type","PersonsForm","addPerson","newName","newNumber","changeNameInput","changeNumberInput","onSubmit","components_Input","components_Button","Person","name","number","onClick","Persons","Notification","message","colortype","notificationStatus","color","style","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filterName","setFilterName","_useState9","_useState10","notification","setNotification","_useState11","_useState12","notificationType","setNotificationType","_useState13","_useState14","showAllNames","setShowAllNames","useEffect","servisePersons","initialPersonsList","namesToDisplay","filter","person","toLocaleLowerCase","includes","updateNumber","personToUpdate","find","p","updatedPerson","objectSpread","window","confirm","updated","map","setAllStatesToDefault","components_Notification","components_Filter","event","target","components_PersonsForm","preventDefault","n","newPerson","undefined","setTimeout","components_Persons","components_Person","key","console","log","updatedPersons","catch","error","deletePerson","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4b2d76da.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseURL).then((response) => {\r\n        return response.data;\r\n    });\r\n}\r\n\r\nconst create = (newObj) => {\r\n    return axios.post(baseURL, newObj).then((response) => {\r\n        return response.data;\r\n    });\r\n}\r\n\r\nconst update = (id,obj) => {\r\n    return axios.put(`${baseURL}/${id}`, obj).then((response) => {\r\n        return response.data;\r\n    })\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseURL}/${id}`);\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\n\r\nconst Filter = ({value, handler}) =>{\r\n    \r\n    return(\r\n        <>\r\n            Filter by name: <input value={value} onChange={handler} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Input = ({value, handler}) => {\r\n    return (\r\n        <>\r\n            <input value={value} onChange={handler} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Button = ({text}) => {\r\n    return (\r\n        <>\r\n            <button type=\"submit\">{text}</button>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\n\r\nconst PersonsForm = ({addPerson, newName, newNumber, changeNameInput, changeNumberInput}) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={addPerson}>\r\n                name: <Input value={newName} handler={changeNameInput}/>\r\n                number: <Input value={newNumber} handler={changeNumberInput}/>\r\n                <Button text={\"add\"}/>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonsForm","import React from 'react'\r\n\r\nconst Person = ({name, number, handler}) =>{\r\n    return(\r\n        <p>{name} {number} <button type=\"submit\" onClick={handler}>delete</button></p>\r\n    );\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Persons = ({handler}) => {\r\n    return(\r\n        <>\r\n        {handler}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({message, colortype}) => {\r\n    if(message === null) return null;\r\n    const notificationStatus = {\r\n        color: colortype\r\n    }\r\n    return(\r\n        <div style={notificationStatus} className=\"new-item\">\r\n            <p>{message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport '../index.css'\r\nimport servisePersons from '../services/persons'\r\n\r\nimport Filter from './Filter'\r\nimport PersonsForm from './PersonsForm'\r\nimport Person from './Person'\r\nimport Persons from './Persons'\r\nimport Notification from './Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [filterName, setFilterName] = useState('');\r\n    const [notification, setNotification] = useState(null);\r\n\r\n    const [notificationType, setNotificationType] = useState('');\r\n\r\n    const [showAllNames, setShowAllNames] = useState(true);\r\n\r\n    useEffect(() => {\r\n        servisePersons.getAll()\r\n            .then((initialPersonsList) => {\r\n                setPersons(initialPersonsList);\r\n            })\r\n    }, []);\r\n\r\n\r\n    const namesToDisplay = showAllNames ? persons : persons.filter((person) => {\r\n        return person.name.toLocaleLowerCase().includes(filterName.toLocaleLowerCase());\r\n    });\r\n\r\n    const changeNameInput = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n    const changeNumberInput = (event) => {\r\n        setNewNumber(event.target.value);\r\n    }\r\n    const filterByName = (event) => {\r\n        setFilterName(event.target.value);\r\n        setShowAllNames(false);\r\n    }\r\n\r\n    const checkName = (n) => {\r\n        return persons.find((person) => {\r\n            return person.name.toLocaleLowerCase() === n.toLocaleLowerCase();\r\n        }) === undefined ? true : false;\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault();\r\n        const newPerson = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        const name = checkName(newPerson.name);\r\n\r\n        if (name) {\r\n            servisePersons.create(newPerson)\r\n                .then(() => {\r\n                    setPersons(persons.concat(newPerson));\r\n                });\r\n\r\n            setNotificationType('green');\r\n            setNotification(`${newPerson.name} has been successfully added to the list.`);\r\n\r\n            setAllStatesToDefault();\r\n\r\n            setTimeout(() => {\r\n                setNotification(null);\r\n                setNotificationType(\"black\");\r\n            }, 5000);\r\n        }\r\n\r\n        else {\r\n            updateNumber(newPerson);\r\n        }\r\n    }\r\n\r\n    const updateNumber = (person) => {\r\n        const personToUpdate = persons.find((p) => {\r\n            return p.name === person.name;\r\n        });\r\n\r\n        const updatedPerson = {\r\n            ...personToUpdate,\r\n            number: person.number\r\n        }\r\n\r\n        const response = window.confirm(`${updatedPerson.name} exists. Do you want to update the number?`);\r\n        if (response) {\r\n            servisePersons.update(updatedPerson.id, updatedPerson)\r\n                .then((updated) => {\r\n                    setPersons(persons.map((person) => {\r\n                        return person.id !== updated.id ? person : updated;\r\n                    }));\r\n                });\r\n\r\n            setAllStatesToDefault();\r\n        }\r\n        else return;\r\n    }\r\n\r\n    const deletePerson = (id) => {\r\n        const name = persons.find(person => person.id === id).name;\r\n        const response = window.confirm(`Delete ${name}?`);\r\n        if (response) {\r\n            servisePersons.remove(id).then(() => {\r\n                console.log('deleted');\r\n                const updatedPersons = persons.filter((person) => {\r\n                    return person.id !== id;\r\n                });\r\n                setPersons(updatedPersons);\r\n            })\r\n                .catch((error) => {\r\n                    setNotificationType('red');\r\n                    setNotification(`${name} has already been deleted.`);\r\n                    setTimeout(() => {\r\n                        setNotification(null);\r\n                    }, 5000);\r\n                    setPersons(persons.filter((person) => {\r\n                        return person.id !== id;\r\n                    }));\r\n                });\r\n        }\r\n        else return;\r\n    }\r\n\r\n    const setAllStatesToDefault = () => {\r\n        setNewName('');\r\n        setNewNumber('');\r\n        setFilterName('');\r\n    }\r\n\r\n\r\n    const renderNames = () => namesToDisplay.map((person) => {\r\n        return (\r\n            <Person key={person.name} name={person.name} number={person.number} handler={() => deletePerson(person.id)} />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notification} colortype={notificationType} />\r\n            <Filter value={filterName} handler={filterByName} />\r\n            <h3>Add a new contact</h3>\r\n            <PersonsForm addPerson={addPerson} newName={newName} changeNameInput={changeNameInput} newNumber={newNumber}\r\n                changeNumberInput={changeNumberInput} />\r\n            <h2>Numbers</h2>\r\n            <Persons handler={renderNames()} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}